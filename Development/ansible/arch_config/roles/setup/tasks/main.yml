---
# tasks file for setup

- name: Backup dconf settings
  block:
    - name: Ensure backup directory exists
      ansible.builtin.file:
        path: "{{ home_dir }}/dconf_backups"
        state: directory
        mode: '0755'

    - name: Backup current dconf settings
      ansible.builtin.shell:
        cmd: dconf dump / > "{{ home_dir }}/dconf_backups/dconf-settings-backup-$(date +%Y%m%d-%H%M%S).ini"

    - name: Archive the dconf_backup directory
      ansible.builtin.shell:
        cmd: "tar -czvf /tmp/dconf_backups.tar.gz -C {{ home_dir }}/ dconf_backups"
      register: tar_result
      failed_when: tar_result.rc != 0

  
    # - name: Debug Tar Result
    #   debug:
    #     var: tar_result
    - name: Gather Resources
      ansible.builtin.include_tasks: gather_resources.yml


    # - name: Include encrypted password from vault file
    #   include_vars:
    #     file: "{{ ansible_dir }}/group_vars/vault_ansible_become_pass.yml"
    #     name: vault_vars

    - name: Decrypt password
      ansible.builtin.command:
        cmd: "ansible-vault decrypt {{ ansible_dir }}/group_vars/vault_pass.pass"

    - name: Encrypt the archive with Ansible Vault
      ansible.builtin.command:
        cmd: "ansible-vault encrypt --vault-password-file {{ my_password }} {{ ansible_dir }}/resources/files/dconf_backups.tar.gz"

    - name: Encrypt password
      ansible.builtin.command:
        cmd: "ansible-vault encrypt {{ ansible_dir }}/group_vars/vault_pass.pass"




